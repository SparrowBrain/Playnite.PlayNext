<PluginUserControl  x:Class="PlayNext.Views.PlayNextMainView"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:converters="clr-namespace:PlayNext.Converters"
                    xmlns:model="clr-namespace:PlayNext.Model.Data"
                    mc:Ignorable="d"
                    d:DesignHeight="450" d:DesignWidth="800">
    <PluginUserControl.Resources>
        <ResourceDictionary>
            <Style  TargetType="Control">
                <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
                <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style  TargetType="TextBlock">
                <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
                <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource PopupBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PopupBorderBrush}" />
                <Setter Property="BorderThickness" Value="{DynamicResource PopupBorderThickness}" />
            </Style>
        </ResourceDictionary>
    </PluginUserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50px"></RowDefinition>
            <RowDefinition Height="50px"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Text="{DynamicResource LOC_PlayNext_PluginName}" Margin="10,30,0,0"></TextBlock>
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button
                Margin="0,0,10,0"
                Width="50"
                Height="30"
                Command="{Binding SwitchToCovers}"
                IsEnabled="{Binding ActiveShowcaseType, Converter={converters:ShowcaseTypeToInvertedBooleanConverter}, ConverterParameter={x:Static model:ShowcaseType.Covers}}">
                ▋ ▋
            </Button>
            <Button
                Margin="0,0,50,0"
                Width="50"
                Height="30"
                Command="{Binding SwitchToList}"
                IsEnabled="{Binding ActiveShowcaseType, Converter={converters:ShowcaseTypeToInvertedBooleanConverter}, ConverterParameter={x:Static model:ShowcaseType.List}}">
                ≡
            </Button>
        </StackPanel>

        <Grid Grid.Row="2"  Visibility="{Binding ActiveShowcaseType, Converter={converters:ShowcaseTypeTCollapsedVisibilityConverter}, ConverterParameter={x:Static model:ShowcaseType.List}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="1" Text="{DynamicResource LOC_PlayNext_MainScoreColumn}" VerticalAlignment="Center" />
                <TextBlock Grid.Column="2" Text="{DynamicResource LOC_PlayNext_MainNameColumn}" VerticalAlignment="Center" />
            </Grid>
            <ListBox Grid.Row="1" ItemsSource="{Binding Games}" Background="Transparent">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="Focusable" Value="False" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,2.5,0,2.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Width="25">
                                <Image.Source>
                                    <BitmapImage DecodePixelWidth="50"  UriSource="{Binding Icon}" />
                                </Image.Source>
                            </Image>
                            <TextBlock Grid.Column="1" Text="{Binding Score, StringFormat=#0.00}" VerticalAlignment="Center" />
                            <TextBlock Grid.Column="2" Text="{Binding Name}" VerticalAlignment="Center" />
                            <Button Grid.Column="3" Command="{Binding OpenDetails}"  Content="{DynamicResource LOC_PlayNext_MainDetailsButton}"></Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListBox>
        </Grid>

        <Grid Grid.Row="2"  Visibility="{Binding ActiveShowcaseType, Converter={converters:ShowcaseTypeTCollapsedVisibilityConverter}, ConverterParameter={x:Static model:ShowcaseType.Covers}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <ListBox Grid.Row="1"  ItemsSource="{Binding TopGames}" Background="Transparent" >
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
              
                    </Style>
                    
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" MouseWheel="OnCoversListBoxMouseWheel" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RenderTransform>
                                <ScaleTransform  x:Name="HoverTransform" CenterX="150" CenterY="200" ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>
                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="Grid.MouseEnter">

                                    <EventTrigger.Actions>
                                        <StopStoryboard BeginStoryboardName="hoverStopStoryboard"></StopStoryboard>
                                        <BeginStoryboard Name="hoverStartStoryboard">
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="HoverTransform" 
                                                    Storyboard.TargetProperty="ScaleX" 
                                                    From="1" To="1.05" Duration="0:0:0.1" />
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="HoverTransform" 
                                                    Storyboard.TargetProperty="ScaleY" 
                                                    From="1" To="1.05" Duration="0:0:0.1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Grid.MouseLeave">
                                    <EventTrigger.Actions>
                                        <StopStoryboard BeginStoryboardName="hoverStartStoryboard"></StopStoryboard>
                                        <BeginStoryboard Name="hoverStopStoryboard">
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="HoverTransform" 
                                                    Storyboard.TargetProperty="ScaleX" 
                                                    From="1.05" To="1" Duration="0:0:0.05" />
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="HoverTransform" 
                                                    Storyboard.TargetProperty="ScaleY" 
                                                    From="1.05" To="1" Duration="0:0:0.05" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Grid.Triggers>

                            <Button Command="{Binding OpenDetails}" Background="Transparent" >
                                <Image Height="400" >
                                    <Image.Source>
                                        <BitmapImage DecodePixelHeight="400"  UriSource="{Binding CoverImage}" />
                                    </Image.Source>
                                </Image>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</PluginUserControl>